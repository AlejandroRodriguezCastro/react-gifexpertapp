{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC/BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,QAIxC,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAdc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEpC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,6CAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAGtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeJ,OAVIC,qBAAW,WACP1B,EAAQC,GACH0B,MAAM,SAAAC,GACHH,EAAS,CACTjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAEDuB,EDb8BK,CAAa5B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAOtB,EAAP,OACEsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEdxBkB,EAAe,WACxB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCflC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c58fa5d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 0){\n        setCategories( cats => [ inputValue, ...cats]);\n        }\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=8LIbQbssS1a7wpCOwdXKqXYwMOrmRj50`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return(gifs);\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title,url} ) => {\n    console.log(id,title,url)\n    return (\n        <div className='card animate__animated animate__fadeInDown'>\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    \n    \n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3> { category } </h3> \n            { loading && <p>Loading</p> }\n            <div className='card-grid'>\n\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={img.id}\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                data: imgs,\n                loading: false\n            });\n            });\n    }, [category])\n    \nreturn state\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Dragon Ball'])\n\n    // const handleAdd = () => {\n    //     setCategories( cat => [...cat, 'AstroBoy']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}